1. 자바를 컴파일하고 실행하는 방법
cmd 창 ( 명령 프롬프트 )
컴파일 : javac source.java
실행   : java -cp source.class

2. 자바의 기본 자료형및 크기
int 4byte
double 8byte
char 1byte
short 1byte
byte  1byte
boolean true/false
long 8byte
float 4byte

3.삼항연산자의 형식및 간단한 예제 만들기
a =1
b = 2
a > b ? a : b

4. 제어문의 종류및 형식을 설명하고 제어문당 간단한 예제 하나씩 만들기

제어문엔 반복문과 조건문이 있음

형식
제어문 ( 조건식 ){
}

if( a == b){
}else if ( a == c){
}else{
}

switch(a ){
case "a":
break;
case "c":
break;
case "b":
break;
default:
break;
}

for( int i=0; i<10; i++){
}

while( true) {
}

do{
}while(true);

5. 배열의 개요및 배열의 생성,초기값을 부여하는 방법

배열 : 같은 타입의 데이터를 연속된 공간에 나열시켜 index를 부여한 자료구조

생성 및 초기화
int[] a;

int a[] = new int[3];

String[] a = {"abc", "def"};

6. 생성자,디폴트생성자 개요

생성자 : new 연산자와 같이 사용되어 클래스의 인스턴스를 생성할 때 호출되는 메소드

디폴트 생성자 : 생성자를 따로 정의하지 않았을 때 사용되는 내용이 비어있는 생성자

7. 메소드 오버로딩이란

같은 클래스 내에 이름이 같고 매개변수형식이 다른 메소드를 정의하는 행위

8. private, protected, public 이란?
클래스, 메소드 등의 접근 제한자

private   : 모든 외부 클래스에서 접근 불가
public    : 모든 클래스에서 접근 가능
protected : 자식 클래스가 아닌 다른 패키지에 소속된 클래스

9. import문의 형식

패키지이름.클래스이름

예) java.util.Arrays

10. this, super ?

this  : 클래스 내에서 자기 자신의 클래스를 의미
super : 자기 자신의 부모 클래스를 의미

11. final,static

final : 초기값이 정해지면 변경이 불가능함 ( 필드, 메소드, 클래스에 사용가능 )

static: 정적인 필드와 메소드를 선언할 때 사용 (프로그램 시작시 로딩됨)

12. 상속이란 ?

하위 개념의 클래스가 상위 개념의 클래스의 내용을 물려받는것

키워드로 extends를 사용하며 중복 상속이 불가능하다.
상속을 받으면 상위 클래스의 private으로 선언된 필드, 메소드를 제외한 필드와 메소드를
하위 클래스에서 사용 가능하며 메소드를 오버라이딩 할 수 있다.

13. Object 클래스 ?

java의 모든 클래스의 최상위 부모 클래스
즉 모든 클래스는 Object클래스를 상속 받고 있다.

14. 메소드 오버로딩 ?

같은 클래스 내에 이름이 같고 매개변수형식이 다른 메소드를 정의하는 행위

15. String에 대하여 간단히 설명하고 중요메소드 10개만 설명 또는 사용법?

문자열을 다루는 java의 클래스 이며 Immutable(변경 불가능)한 성질이 있다.

1.split()                 : 인자를 기준으로 문자열을 나누어줌
2.charAt()                : 넘겨준 인덱스의 문자 하나를 리턴
3.equals()                : 두 문자열이 같은지 비교
4.equalsIgnoreCase()      : 두 문자열이 같은지 대소문자 구분없이 비교
5.length()                : 문자열의 길이를 리턴
6.isEmpty()               : 문자열이 빈 문자열인지 검사
7.concat()                : 두 문자열을 이어 붙임
8.compareTo()             : 두 문자열을 비교
9.compareToIgnoreCase()   : 두 문자열을 대소문자 구분 없이 비교
10.indexOf()              : 인자로 넘겨준 문자열과 처음 일치하는 곳의 인덱스 리턴


16. StringBuffer에 대하여 간단히 설명

String과 같이 문자열을 다루나
생성된 인스턴스를 수정할 수 없는 String을 대신해 인스턴스를 수정 할  수 있는 클래스
또한 동기화가 적용되어 멀티스레드 환경에서 안전하다 ( Thread - safe)

17. Calendar 클래스에 대한 간단한 설명(객체생성방법, 주요메소드등)

java에서 날짜와 시간을 다루는 클래스 싱클턴으로 구현되어있어
new로 새로운 객체를 생성하는게 불가능하며 getInstance로 객체를 리턴받아 사용한다.

Calendar now = Calendar.getInstance(); //생성

// 각각 연, 월(0~11) , 일 , 주의수를 가져옴
int y = now.get(Calendar.YEAR);
int m = now.get(Calendar.MONTH) + 1;
int d = now.get(Calendar.DATE);
int w = now.get(Calendar.DAY_OF_WEEK);

// 현재 시스템의 날짜가 아닌 새로운 날짜로 세팅
now.set(2019,10-1,10);

// field의 값을 x 만큼 증가
cal.add(Calendar.DATE, x);

18. 추상 클래스 ?
실체 객체를 생성할 수 있는 클래스들의 공통적인 특성을 모아서 필드와 메소드를 선언한 클래스

1. 추상 클래스로는 객체를 생성 할 수 없다.
2. 추상 메소드로 선언된 메소드는 상속 받은 자식 클래스에서 반드시 구현해야 한다.(오버라이딩)
3. abstract 키워드를 사용하여 선언한다.
4. 추상메소드는 선언부만을 가지며 메소드를 정의하지 않는다.

public abstract class A{
public int a;

public abstract int b();
}

19. 인터페이스 ?

객체의 사용 방법을 정의한 타입

다형성을 구현하는데 중요한 역할을 한다.

interface키워드로 선언하며 추상메소드를 선언하여 interface를 구현하는 클래스에
오버라이딩을 강제 한다.
interface를 구현하는 클래스는 implements 키워드를 사용하며 복수의 인터페이스를 
하나의 클래스가 구현 할 수 있다.

public interface if {

public void print(); // abstract 생략
}

class A implements if{

@override
void print(){
}
}

